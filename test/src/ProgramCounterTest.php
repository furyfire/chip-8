<?php

namespace furyfire\chip8;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-06-05 at 13:47:19.
 */
class ProgramCounterTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var ProgramCounter
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ProgramCounter;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers furyfire\chip8\ProgramCounter::step
     */
    public function testStep()
    {
        $value = $this->object->get();
        $this->object->step();
        $value+=2;
        $this->assertEquals($value, $this->object->get());


        $this->object->step();
        $this->object->step();
        $value +=4;

        $this->assertEquals($value, $this->object->get());

    }

    /**
     * @covers furyfire\chip8\ProgramCounter::skip
     */
    public function testSkip()
    {
        $value = $this->object->get();
        $this->object->skip();
        $value+=4;
        $this->assertEquals($value, $this->object->get());


        $this->object->skip();
        $this->object->skip();
        $value +=8;

        $this->assertEquals($value, $this->object->get());
    }

    /**
     * @covers furyfire\chip8\ProgramCounter::jumpTo
     */
    public function testJumpTo()
    {
        $this->object->jumpTo(0x400);
        $this->assertEquals(0x400, $this->object->get());
    }

    /**
     * @covers furyfire\chip8\ProgramCounter::jumpTo
     */
    public function testJumpToInvalidAddr()
    {
        $this->setExpectedException('InvalidArgumentException');
        $this->object->jumpTo(0x4000);
    }
    /**
     * @covers furyfire\chip8\ProgramCounter::jumpTo
     */
    public function testJumpToOddAddress()
    {
        $this->setExpectedException('InvalidArgumentException');
        $this->object->jumpTo(0x4000);
    }



}
